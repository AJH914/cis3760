stages:
  - test
  - build
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ''
  GCP_PROJECT_NAME: cis3760-web-app
  REGISTRY_HOSTNAME: us-east1-docker.pkg.dev/$GCP_PROJECT_NAME
  REGISTRY_REPO: scheduler-repo
  CLUSTER_NAME: scheduler-gke
  CLUSTER_REGION: us-east1

test:
  image: python:latest
  variables:
    PIP_CACHE_DIR: '$CI_PROJECT_DIR/.cache/pip'
  cache:
    paths:
      - .cache/pip
      - venv/
  before_script:
    - python --version # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
  script:
    - python3 -m unittest discover -s scripts/tests

build-app:
  stage: build
  image: docker:latest
  services:
    - name: docker:dind
      entrypoint: ['dockerd-entrypoint.sh', '--tls=false']
  before_script:
    - docker info
    - echo "$GCP_SA_KEY" > key.json
    - docker login -u _json_key --password-stdin https://gcr.io < key.json
  script:
    - docker build --tag $REGISTRY_HOSTNAME/$REGISTRY_REPO/scheduler-app:$CI_COMMIT_SHORT_SHA ./server
    - docker push $REGISTRY_HOSTNAME/$REGISTRY_REPO/scheduler-app:$CI_COMMIT_SHORT_SHA

build-api:
  stage: build
  image: docker:latest
  services:
    - name: docker:dind
      entrypoint: ['dockerd-entrypoint.sh', '--tls=false']
  before_script:
    - docker info
    - echo "$GCP_SA_KEY" > key.json
    - docker login -u _json_key --password-stdin https://gcr.io < key.json
  script:
    - docker build --tag $REGISTRY_HOSTNAME/$REGISTRY_REPO/scheduler-api:$CI_COMMIT_SHORT_SHA ./client
    - docker push $REGISTRY_HOSTNAME/$REGISTRY_REPO/scheduler-api:$CI_COMMIT_SHORT_SHA

deploy:
  stage: deploy
  image: google/cloud-sdk
  script:
    - echo "$GCP_SA_KEY" > key.json
    - gcloud auth activate-service-account --key-file=key.json
    - gcloud config set project GCP_PROJECT_NAME
    - gcloud config set container/cluster CLUSTER_NAME
    - gcloud config set compute/zone CLUSTER_REGION
    - gcloud container clusters get-credentials CLUSTER_NAME --zone CLUSTER_REGION --project GCP_PROJECT_NAME
    - sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" deployment.yaml
    - kubectl apply -f deployment.yaml
