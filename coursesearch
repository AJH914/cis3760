#!/usr/bin/env python3

# authored by Sahejveer, Tristan, Ali & Kyler

import os
import sys
import json

INPUT_FILE = 'data/output.json'

SECTION_INFO = {
    'term': 'Term',
    'status': 'Status',
    'location': 'Location',
    'capacity': 'Capacity',
    'credits': 'Credits',
    'academicLevel': 'Academic Level'
}

MEETING_INFO = ['meetingType', 'day', 'startTime', 'endTime', 'building', 'room']

def usage():
	print('Usage: coursesearch <course_code> [--in input_file.json]')

# python3 coursesearch.py [args..]
# coursesearch CIS*3760
# coursesearch --help

if len(sys.argv) != 2:
	if len(sys.argv) == 4 and sys.argv[2] == '--in':
		INPUT_FILE = sys.argv[3]
	else:
		usage()
		sys.exit()

if sys.argv[1] == '-h' or sys.argv[1] == '--help':
	usage()
	sys.exit()

# check for existence of input file
if not os.path.exists(INPUT_FILE):
    print('coursesearch: input file does not exist')
    sys.exit()

# assign searched value to a variable
search_course = sys.argv[1]

file = open(INPUT_FILE)
courseData = json.load(file) # load json data in dictionary

# if courseData contains search term then print info else course does not exist
if search_course in courseData:
    course = courseData[search_course]
    
    print("\nCourse: ", search_course)

    # print each section
    for i in range(len(course)):
        section = course[i]

        print("\nSection: ", section['section'])

        # print each key we want to display from SECTION_INFO
        for key, title in SECTION_INFO.enumerate():
            # ensure that the key exists in the course dictionary
            if key in section and section[key]:
                print("\n" + title + ": ", section[key])

        # ensure meetings exist and is non-empty
        if 'meetingInfo' in section and section['meetingInfo']:
            print("\nMeeting Info:\n")
            for meeting in section['meetingInfo']:
                # ensure all meeting data is present
                if all(key in meeting for key in MEETING_INFO):
                    print("\t(" + meeting['meetingType'] + ") " + meeting['day'] + " " + meeting['startTime'] + " - " + meeting['endTime'] + ", " + meeting['building'] + " " + meeting['room'] + "\n")

        print("\n")
else:
	print("Course does not exist")
